name: CI

on:
  push:
    branches: [ main ]
    tags:
      - '*'
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest

    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update && \
          sudo apt-get install -y \
            g++-10 \
            ninja-build \
            libglfw3-dev
      
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Build
        run: CXX=g++-10 make build

      - name: Package
        run: make package
    
      - name: Archive artifact
        uses: actions/upload-artifact@v2
        with:
          name: osm-rally-artifact-ubuntu
          path: |
            data
            GURelease
            osm_racing_game
            osm_racing_game.cmd
 
  build-msys2:
    runs-on: windows-latest
    
    defaults:
      run:
        shell: msys2 {0}

    steps:
      - uses: msys2/setup-msys2@v2

      - name: Install dependencies
        run: |
          pacman --noconfirm -S \
            mingw-w64-x86_64-glfw \
            mingw-w64-x86_64-vulkan-devel \
            mingw-w64-x86_64-gcc \
            mingw-w64-x86_64-ninja \
            mingw-w64-x86_64-cmake \
            make \
            rsync

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Build
        run: make build

      - name: Package
        run: make package
    
      - name: Archive artifact
        uses: actions/upload-artifact@v2
        with:
          name: osm-rally-artifact-msys2
          path: |
            GMRelease

  create-release:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: [build-ubuntu, build-msys2]
    steps:
      - name: Download Ubuntu artifact
        uses: actions/download-artifact@v2
        with:
          name: osm-rally-artifact-ubuntu
          path: MGame
      
      - name: Download MSYS2 artifact
        uses: actions/download-artifact@v2
        with:
          name: osm-rally-artifact-msys2
          path: MGame/GMRelease
      
      - name: Create ZIP archive
        run: zip -r MGame.zip MGame
          
      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "MGame.zip"
          token: ${{ secrets.GITHUB_TOKEN }}
